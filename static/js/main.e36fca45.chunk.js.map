{"version":3,"sources":["views/index/js/Timer.js","views/index/js/Task.js","views/index/js/AddTaskSection.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","state","value","timer","isModalShown","renderTimer","bind","handleClose","seconds","minutes","this","formatTime","toString","clearInterval","timerID","setInterval","setState","setTimer","updateBreakStatus","console","log","timerState","color","pause","resume","isBreakTime","timerValue","className","style","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","React","Component","Task","isDone","task","updateStartStatus","updateDoneStatus","delete","event","id","removeTask","btnPause","currentTaskId","name","type","class","AddTaskSection","setDate","date","handleInput","handleClick","target","addDoingTask","htmlFor","onChange","App","getId","list","maximumId","reduce","prev","cur","listTaskDoing","removeDoingTask","arr","splice","findIndex","item","listTask","find","backgroundColor","filter","length","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e36fca45.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: this.props.timer,\r\n      isModalShown: false,\r\n    };\r\n    this.renderTimer = this.renderTimer.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  renderTimer(timer) {\r\n    let seconds = timer % 60;\r\n    let minutes = (timer - seconds) / 60;\r\n    return `${this.formatTime(minutes)}:${this.formatTime(seconds)}`;\r\n  }\r\n\r\n  formatTime(value) {\r\n    return value < 10 ? ('0' + value) : value.toString();\r\n  }\r\n\r\n  resume(timer) {\r\n    clearInterval(this.state.timerID);\r\n    this.state.timerID = setInterval(\r\n      () => {\r\n        if (timer <= 0) {\r\n          this.setState({ isModalShown: true });\r\n        }\r\n        else {\r\n          this.setState({ value: timer - 1 });\r\n          this.props.setTimer(this.state.value);\r\n        }\r\n      },\r\n      1000\r\n    );\r\n  }\r\n\r\n  pause() {\r\n    clearInterval(this.state.timerID);\r\n  }\r\n\r\n  handleClose() {\r\n    this.props.updateBreakStatus();\r\n    this.setState({ isModalShown: false });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.timerState);\r\n    let color = \"\";\r\n    if (this.props.timerState === \"pause\") {\r\n      this.pause();\r\n      color = \"#383d42\";\r\n    }\r\n    else if (this.props.timerState === \"running\") {\r\n      this.resume(this.props.timer);\r\n      color = this.props.isBreakTime ? \"#3ca861\" : \"#e0942a\";\r\n    }\r\n    const timerValue = this.renderTimer(this.props.timer);\r\n    return (\r\n      <div>\r\n        <h1 className=\"text-center\" style={{ color }}>{timerValue}</h1>\r\n        <Modal show={this.state.isModalShown} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Hey</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.props.isBreakTime ? 'Come back to work!' : 'Take a break!'}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" onClick={this.handleClose}>Ok</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import \"../css/Task.css\";\r\nimport React from \"react\";\r\n\r\nclass Task extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDone: this.props.task.isDone,\r\n    };\r\n    this.updateStartStatus = this.updateStartStatus.bind(this);\r\n    this.updateDoneStatus = this.updateDoneStatus.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n  }\r\n\r\n  updateDoneStatus(event) {\r\n    this.setState({\r\n      isDone: true\r\n    });\r\n\r\n    this.props.updateDoneStatus(this.props.task.id, true);\r\n  }\r\n\r\n  updateStartStatus() {\r\n    this.props.updateStartStatus(this.props.task.id);\r\n  }\r\n\r\n  delete() {\r\n    this.props.removeTask(this.props.task.id);\r\n  }\r\n\r\n  render() {\r\n    let btnPause;\r\n    if (this.props.currentTaskId === this.props.task.id && this.props.timerState === \"running\") {\r\n      btnPause = <span><i className=\"fas fa-pause\"></i> Pause</span>\r\n    }\r\n    else {\r\n      btnPause = <span><i className=\"fas fa-play\"></i> Start</span>\r\n    }\r\n    return (\r\n      <div className=\"mb-2 shadow-sm bg-white\">\r\n        <div className=\"d-flex mb-2 px-3 py-4\">\r\n          <span className=\"fw-bold\">{this.props.task.name}</span>\r\n          <button type=\"button\" class=\"btn btn-sm btn-outline-danger ml-auto\" onClick={this.delete}>\r\n            <i class=\"fas fa-trash-alt\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"d-flex flex-row-reverse bg-light py-2 px-3\">\r\n          {this.props.currentTaskId && this.props.currentTaskId !== this.props.task.id && this.props.timerState === \"running\" ? null : <button type=\"button\" className=\"btn btn-outline-success btn-sm\" onClick={this.updateStartStatus}>{btnPause}</button>}\r\n          <button type=\"button\" className=\"btn btn-outline-primary btn-sm me-2\" onClick={this.updateDoneStatus}><i className=\"fas fa-check\"></i> Done</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\n\r\nclass AddTaskSection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      date: ''\r\n    };\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.setDate = this.setDate.bind(this);\r\n  }\r\n\r\n  handleInput(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.addDoingTask(this.state.value);\r\n    this.setState({ value: \"\" });\r\n  }\r\n\r\n  setDate = (date) => {\r\n    this.setState({\r\n      date\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-12 mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <label className=\"col-form-label\" htmlFor=\"inputPassword\" >Task</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"inputPassword\" value={this.state.value} onChange={this.handleInput} />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label className=\"col-form-label\" htmlFor=\"exampleFormControlInput1\">Estimate</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 mb-3\">\r\n          <button type=\"button\" className=\"btn btn-secondary float-right\" onClick={this.handleClick}>\r\n            <i className=\"fas fa-plus\"></i> Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTaskSection;\r\n","import './App.css';\r\nimport Timer from './views/index/js/Timer';\r\nimport Task from './views/index/js/Task';\r\nimport AddTaskSection from './views/index/js/AddTaskSection';\r\n// import PlayMusicButton from './views/index/js/PlayMusicButton';\r\nimport React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentTaskId: 0,\r\n      listTaskDoing: [],\r\n      timer: 10,\r\n      timerState: 'pause',\r\n      isBreakTime: false\r\n    }\r\n    this.setTimer = this.setTimer.bind(this);\r\n    this.addDoingTask = this.addDoingTask.bind(this);\r\n    this.removeDoingTask = this.removeDoingTask.bind(this);\r\n    this.updateDoneStatus = this.updateDoneStatus.bind(this);\r\n    this.updateStartStatus = this.updateStartStatus.bind(this);\r\n    this.updateBreakStatus = this.updateBreakStatus.bind(this);\r\n  }\r\n\r\n  getId = (list = []) => {\r\n    let maximumId = list.reduce((prev, cur) => ((prev.id || 0) > (cur.id || 0) ? prev : cur), {}).id || 0;\r\n    maximumId++;\r\n    return maximumId;\r\n  }\r\n\r\n  addDoingTask(value) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      listTaskDoing: [\r\n        ...this.state.listTaskDoing,\r\n        {\r\n          id: this.getId(this.state.listTaskDoing),\r\n          name: value,\r\n          isDone: false\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  removeDoingTask(id) {\r\n    let arr = [...this.state.listTaskDoing];\r\n    arr.splice(arr.findIndex(item => item.id === id), 1);\r\n    this.setState({\r\n      listTaskDoing: arr\r\n    });\r\n  }\r\n\r\n  updateDoneStatus(id, isDone) {\r\n    let listTask = [...this.state.listTaskDoing];\r\n    let task = listTask.find(item => item.id === id);\r\n    task.isDone = isDone;\r\n    this.setState({ listTaskDoing: listTask, timerState: 'pause' });\r\n  }\r\n\r\n  setTimer(value) {\r\n    this.setState({\r\n      timer: value\r\n    });\r\n  }\r\n\r\n  updateStartStatus(id) {\r\n    if (this.state.isBreakTime || this.state.currentTaskId !== id) {\r\n      this.setState({\r\n        timer: 10,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      currentTaskId: id,\r\n      isBreakTime: false,\r\n      timerState: this.state.timerState === 'pause' ? 'running' : 'pause'\r\n    });\r\n  };\r\n\r\n  updateBreakStatus() {\r\n    if (this.state.isBreakTime) {\r\n      this.setState({\r\n        timer: 10,\r\n        isBreakTime: false,\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        timer: 5,\r\n        isBreakTime: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container bg-light py-4 min-vh-100\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h2 class=\"d-inline-block\">Pomodoro</h2>\r\n            <h2 class=\"d-inline-block float-right\">\r\n              <i className=\"fab fa-github\"></i>\r\n            </h2>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Timer timer={this.state.timer} timerState={this.state.timerState} isBreakTime={this.state.isBreakTime} setTimer={this.setTimer} updateBreakStatus={this.updateBreakStatus} />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <h4 className=\"py-2 px-3 text-white rounded-top\" style={{ backgroundColor: '#3f80ea' }}>\r\n              Add a new task\r\n            </h4>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <AddTaskSection addDoingTask={this.addDoingTask} />\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <h4 className=\"py-2 px-3 text-white rounded-top\" style={{ backgroundColor: '#3f80ea' }}>You've got {this.state.listTaskDoing.filter(item => !item.isDone).length} tasks today</h4>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            {/* <PlayMusicButton /> */}\r\n            <div className=\"rounded\">\r\n              {\r\n                this.state.listTaskDoing.map((item, index) => {\r\n                  return <Task key={index} task={item} currentTaskId={this.state.currentTaskId} timerState={this.state.timerState} updateDoneStatus={this.updateDoneStatus} removeTask={this.removeDoingTask} updateStartStatus={this.updateStartStatus} />\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}